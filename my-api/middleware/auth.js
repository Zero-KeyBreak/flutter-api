const jwt = require('jsonwebtoken');
require('dotenv').config();

// üîê L·∫•y secret key t·ª´ .env
const SECRET_KEY = process.env.JWT_SECRET || 'DAIKA_SECRET';

// üß± Middleware: X√°c th·ª±c token
exports.authenticateToken = (req, res, next) => {
  const authHeader = req.headers['authorization'];
  const token = authHeader?.split(' ')[1]; // Bearer TOKEN

  if (!token) {
    return res.status(401).json({ message: 'Kh√¥ng c√≥ token, vui l√≤ng ƒëƒÉng nh·∫≠p!' });
  }

  try {
    const decoded = jwt.verify(token, SECRET_KEY);
    req.user = decoded; // L∆∞u user ƒë√£ decode
    next();
  } catch (err) {
    console.error('JWT Error:', err.message);
    return res.status(403).json({ message: 'Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!' });
  }
};

// üß± Middleware: Ki·ªÉm tra quy·ªÅn truy c·∫≠p (role)
exports.authorizeRoles = (...allowedRoles) => {
  return (req, res, next) => {
    if (!req.user) {
      return res.status(401).json({ message: 'Ch∆∞a x√°c th·ª±c!' });
    }

    if (!allowedRoles.includes(req.user.role)) {
      return res.status(403).json({ message: 'Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!' });
    }

    next();
  };
};
